#! /usr/bin/python

# This code receive from Code.post()

import cgi
import cgitb
import os
from os.path import expanduser
import subprocess
from distutils.version import StrictVersion

cgitb.enable()

print "Content-type: text/plain"
print

#print "debug"
f = cgi.FieldStorage()
#print f
for k in f.keys():
  if k == 'pythonCode':
    # load up and run
    home = expanduser("~")
    filePath = home+'/pythonCode.py' 
    fo = open(filePath,'w')
    #for i in form:
    fo.write(f.getfirst(k))
    fo.close()
    #
    if not os.path.isdir("/sys/class/gpio/gpio3"):
      os.system("echo 3 > /sys/class/gpio/export")
      os.system("echo 'out' > /sys/class/gpio/gpio3/direction")
    os.system("echo 0 > /sys/class/gpio/gpio3/value")
    os.system("echo 1 > /sys/class/gpio/gpio3/value")
    #os.system('kill -9 `pgrep -f mjpg_streamer`')
    proc = subprocess.Popen(['pgrep','-f','monitor.py'],stdout=subprocess.PIPE)
    proc.wait()
    proc = subprocess.Popen(['kill','-9',proc.stdout.read().rstrip('\n')])
    proc.wait()
    proc = subprocess.Popen(['pgrep','-f','pythonCode.py'],stdout=subprocess.PIPE)
    proc.wait()
    proc = subprocess.Popen(['kill','-9',proc.stdout.read().rstrip('\n')])
    proc.wait()
    os.system("python /www/cgi-bin/monitor.py &")
  elif k == "action" and f.getfirst(k) == "run":
    #
    if not os.path.isdir("/sys/class/gpio/gpio3"):
      os.system("echo 3 > /sys/class/gpio/export")
      os.system("echo 'out' > /sys/class/gpio/gpio3/direction")
    os.system("echo 0 > /sys/class/gpio/gpio3/value")
    os.system("echo 1 > /sys/class/gpio/gpio3/value")
    #os.system('kill -9 `pgrep -f mjpg_streamer`')
    proc = subprocess.Popen(['pgrep','-f','monitor.py'],stdout=subprocess.PIPE)
    proc.wait()
    proc = subprocess.Popen(['kill','-9',proc.stdout.read().rstrip('\n')])
    proc.wait()
    proc = subprocess.Popen(['pgrep','-f','pythonCode.py'],stdout=subprocess.PIPE)
    proc.wait()
    proc = subprocess.Popen(['kill','-9',proc.stdout.read().rstrip('\n')])
    proc.wait()
    os.system("python /www/cgi-bin/monitor.py &")
  elif k == "action" and f.getfirst(k) == "stop":
    #
    if not os.path.isdir("/sys/class/gpio/gpio3"):
      os.system("echo 3 > /sys/class/gpio/export")
      os.system("echo 'out' > /sys/class/gpio/gpio3/direction")
    os.system("echo 0 > /sys/class/gpio/gpio3/value")
    os.system("echo 1 > /sys/class/gpio/gpio3/value")
    #
    os.system("kill -9 `pgrep -f pythonCode`")
  elif k == "action" and f.getfirst(k) == "stop_stream":
    os.system('kill -9 `pgrep -f mjpg_streamer`')
    print "Video Stream End."
  elif k == "action" and f.getfirst(k) == "start_stream":
    #os.system("mjpg_streamer -i 'input_uvc.so -d /dev/video0 -r 320x240 -f 25' -o 'output_http.so -p 8080 -w /www/webcam' &")
    proc = subprocess.Popen(["mjpg_streamer","-i","input_uvc.so -d /dev/video0 -r 320x240 -f 12","-o","output_http.so -p 8080 -w /www/webcam","-b"],stdout=subprocess.PIPE,stderr=subprocess.PIPE)
    out,err = proc.communicate()
    print out
    print err
    print "Video Stream Start."
  elif k == "action" and f.getfirst(k) == "check_verison":
    proc = subprocess.Popen(['cat','/www/VERSION'],stdout=subprocess.PIPE)
    proc.wait()
    board_version = proc.stdout.read().rstrip('\n')
    proc = subprocess.Popen(['curl','https://raw.githubusercontent.com/pondahai/MacroByte/master/root/www/VERSION'],stdout=subprocess.PIPE)
    proc.wait()
    now_version = proc.stdout.read().rstrip('\n')
    print "{\"board_version\":\"",board_version,"\",\"now_version\":\"",now_version,"\"}"
  elif k == "action" and f.getfirst(k) == "software_update":
    #https://github.com/pondahai/MacroByte/archive/master.zip
    proc = subprocess.Popen(['rm','/master.zip'],stdout=subprocess.PIPE)
    proc.wait()
    
    proc = subprocess.Popen(['wget','https://github.com/pondahai/MacroByte/archive/master.zip','-P','/'],stdout=subprocess.PIPE)
    proc.wait()
    #print "{\"software_downloaded\":\"","1","\"}"
    
    proc = subprocess.Popen(['unzip','-o','-d','/','/master.zip'],stdout=subprocess.PIPE)
    proc.wait()
    #print "{\"software_unzip\":\"","1","\"}"

    proc = subprocess.Popen(['cp','-R','/MacroByte-master/root/www','/'],stdout=subprocess.PIPE)
    proc.wait()
    #print "{\"software_mv_folder\":\"","1","\"}"

    proc = subprocess.Popen(['python','/post-install.py'],stdout=subprocess.PIPE)
    proc.wait()
    
    print "{\"software_update\":\"1\"}"
